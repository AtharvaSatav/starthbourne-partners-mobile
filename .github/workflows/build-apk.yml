name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install mobile dependencies
      working-directory: ./mobile
      run: npm install

    - name: Prepare native Android build (CI mode)
      run: |
        # Clean Gradle cache completely
        rm -rf ~/.gradle/caches/jars-9/
        rm -rf ~/.gradle/caches/modules-2/
        rm -rf ~/.gradle/caches/transforms-*
        rm -rf ~/.gradle/daemon/
        
        # Remove ALL React Native dependencies to force native build
        rm -rf mobile/node_modules/react-native*
        rm -rf mobile/node_modules/@react-native*
        rm -rf mobile/node_modules/@react-navigation*
        
        # Set CI environment variable for native build mode
        echo "CI=true" >> $GITHUB_ENV

    - name: Make Gradlew executable
      working-directory: ./mobile/android
      run: chmod +x ./gradlew

    - name: Build Android APK with clean
      working-directory: ./mobile/android
      run: |
        echo "=== CI Environment Variables ==="
        echo "CI: $CI"
        echo "GITHUB_ENV: $GITHUB_ENV"
        echo "=== Building unsigned APK in CI mode ==="
        ./gradlew clean assembleRelease --no-daemon --stacktrace --refresh-dependencies

    - name: Debug APK output location
      run: |
        echo "=== Searching for generated APK files ==="
        find mobile/android -name "*.apk" -type f | head -10
        echo "=== Checking build outputs directory ==="
        ls -la mobile/android/app/build/outputs/ || echo "outputs directory not found"
        ls -la mobile/android/app/build/outputs/apk/ || echo "apk directory not found"
        ls -la mobile/android/app/build/outputs/apk/release/ || echo "release directory not found"
        echo "=== APK file details ==="
        find mobile/android/app/build/outputs -name "*.apk" -exec ls -la {} \;
        echo "=== Expected APK names (unsigned) ==="
        ls -la mobile/android/app/build/outputs/apk/release/*unsigned*.apk || echo "No unsigned APK found"
        ls -la mobile/android/app/build/outputs/apk/release/app-release*.apk || echo "No app-release APK found"

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: beepstream-android-apk
        path: mobile/android/app/build/outputs/apk/release/*.apk
        retention-days: 30

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: BeepStream Mobile v${{ github.run_number }}
        body: |
          Automated build of BeepStream mobile app.
          
          ## Installation Instructions
          1. Download the APK file below
          2. Enable "Unknown sources" in Android settings
          3. Install the APK on your phone
          
          ## Features
          - Real-time log monitoring
          - Background notifications
          - Audio alerts for critical logs
          - Kill switch functionality
          - Daily archival integration
        files: mobile/android/app/build/outputs/apk/release/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}